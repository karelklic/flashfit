2010-05-17  Karel Klíč  <kklic@redhat.com>

	* main.py (MainWindow.runTask): Show messages also in console
	alongside the status bar.
	Remove trailing whitespaces.

	* console.py (Console.showMessage): New function.
	Remove trailing whitespaces.

2010-05-09  Karel Klíč  <kklic@redhat.com>

	* absorbanceaxis.py (AbsorbanceAxis.update): Position of the caption
	depends on the width of displayed absorbance values.

	* timeaxis.py (TimeAxis.update): Position of the caption depends on
	the height of displayed time values.

2010-04-18  Karel Klíč  <karel@agata>

	* graphicsscene.py (GraphicsScene.__setSceneSize): Scene does not
	include top and bottom borders.
	(GraphicsScene.recalculateBorders): New function.
	(GraphicsScene.updateAppearance): Changed ordering to propagate
	top and bottom border changes to bars.

	* timebar.py (TimeBar.__init__): No height needed for
	the initialization.
	(TimeBar.setHeight): New function.

	* loadfiletask.py (LoadFileTask.postRun): updateFromData should
	set the best width.

	* timeaxis.py (TimeAxis.__init__): Set some initial width.

	* absorbanceaxis.py (AbsorbanceAxis.__init__): Set some initial
	height and residualStart values.

	* main.py (MainWindow.editAppearance): Fit scene in view after
	updating scene size.

	* graphicsview.py (GraphicsView.fitSceneInView): New function.
	Better name for resizeEvent(), when called from outside.

	* settings.py (Settings.onSceneRectChanged): Do not trust the rect,
	read the width directly from the scene (the rect includes the
	borders, which are now not a part of scene width).

	* graphicsscene.py (GraphicsScene): Scene width does not include
	left and right borders.
	(GraphicsScene.updateAppearance): Adjust left border depending on
	the absorbance axis bounding rect. Update scene using __setSceneSize
	to tell every item in the scene about the left border change.
	(GraphicsScene.__setSceneSize): Scene width does not include
	left and right borders.
	Do not pass height as a variable, as height is always constant.

	* absorbanceaxis.py (AbsorbanceAxis.update): Position depends on
	caption text height.

	* timebarpair.py (TimeBarPair): Make it subclass of QGraphicsItem.
	Empty QGraphicsLineItem used to avoid NotImplemented exceptions.
	(TimeBarPair.__init__): All child graphics items belong to
	the TimeBarPair, as it's now a part of the scene.
	(TimeBarPair.updatePositionFromData): Start from 0 instead of
	LEFT_BORDER.
	(FullLightBarPair.__init__): Remove leftBorder parameter.
	(AbsorbanceFitBarPair.__init__): Remove leftBorder parameter.

	* timebar.py (TimeBar.__init__): Remove dependency on the left
	border knowledge. Go from zero to time axis width.
	(TimeBar.clearMovingItemsInitialPositions): Likewise.
	(TimeBar.mouseMoveEvent): Likewise.

	* graphicsscene.py (GraphicsScene.__init__): The bars are no longer
	dependent on BORDER_LEFT since the scene initialization.
	(GraphicsScene.__setSceneSize): Set actual BORDER_LEFT value to
	the bars by setting the position of the whole TimeBarPair (newly part
	of the scene).

	* timeaxis.py (TimeAxis.update): Set text position _after_ font
	update, because the position depends on text size, which depends
	on the font.
	(TimeAxis.update): Caption text position depends on its size.

	* absorbanceaxis.py (AbsorbanceAxis.update): Likewise.
	(AbsorbanceAxis.update): Caption text position depends on its size.

	* timebarpair.py (TimeBarPair.__init__): Update appearance on init.
	New variable legendTextVisible controls the visibility of caption.
	(FullLightBarPair): New class based on TimeBarPair, implements
	updateAppearance for the full light bars.
	(AbsorbanceFitBarPair): New class based on TimeBarPair, implements
	updateAppearance for the absorbance fit bars.

	* settings.py (Settings.__init__): Removed rateCoeffPrecision
	control. The precision can now be changed in the Appearance dialog.

2010-04-17  Karel Klíč  <karel@agata>

	* main.py (MainWindow.editAppearance): Run appearance dialog.

	* informationtable.py (InformationTable.updateAppearance): New method
	which updates the table after changing appearance in the new Appearance
	dialog.
	(InformationTable.textFromData): Use global variable to read the k()
	precision.
	(InformationTable.__init__): Update appearance on init.

	* graphicsscene.py (GraphicsScene.__init__): Use specific classes for
	fullLightBars and fitAbsorbanceBars.
	(GraphicsScene.updateAppearance): New method which updates the graphics
	interface after running Appearance dialog.
	(GraphicsScene.changeRateCoeffPrecision): Removed method. The precision
	is now changeable in Appearance dialog and update is made by
	updateAppearance.

	* absorbanceaxis.py (AbsorbanceAxis.update): Use global variables
	for fonts and caption.
	* timeaxis.py (TimeAxis.update): Likewise.

	* variables.py: New file. List of application global, persistent
	variables.

	* spinbox.py: SpinBox class was moved to separate file from settings.py
	as it's used on multiple places now.

	* font.py: New file. Contains an extension to QFont.

	* appearance.py: New file. Contains Appearance dialog (Edit->Appearance).

	* ngml.py (ModelABC.rcalc): Use nonneglstsq instead of linalg.lstsq
	from numpy.
	(ModelFirst.rcalc): Likewise.
	(ModelFirst2.rcalc): Likewise.
